/* eslint-disable */
export default async () => {
    const t = {
        ["./users/enums/currency"]: await import("./users/enums/currency"),
        ["./users/dto/wallet.dto"]: await import("./users/dto/wallet.dto"),
        ["./payments/enums/transaction-type"]: await import("./payments/enums/transaction-type"),
        ["./admin-management/dto/admin-response.dto"]: await import("./admin-management/dto/admin-response.dto"),
        ["./users/dto/user-info.dto"]: await import("./users/dto/user-info.dto"),
        ["./transactions/dto/bank-to-bank-transaction.dto"]: await import("./transactions/dto/bank-to-bank-transaction.dto"),
        ["./transactions/dto/wallet-to-wallet-transaction.dto"]: await import("./transactions/dto/wallet-to-wallet-transaction.dto"),
        ["./transactions/dto/bank-to-wallet-transaction.dto"]: await import("./transactions/dto/bank-to-wallet-transaction.dto"),
        ["./transactions/dto/wallet-to-bank-transaction.dto"]: await import("./transactions/dto/wallet-to-bank-transaction.dto"),
        ["./transactions/dto/transactions-list.dto"]: await import("./transactions/dto/transactions-list.dto"),
        ["./common/dto/status.dto"]: await import("./common/dto/status.dto"),
        ["./payments/dto/transaction.dto"]: await import("./payments/dto/transaction.dto"),
        ["./admin-management/dto/admin-auth.dto"]: await import("./admin-management/dto/admin-auth.dto"),
        ["./admin-management/dto/paginated-admin-response.dto"]: await import("./admin-management/dto/paginated-admin-response.dto"),
        ["./user-management/dto/paginated-user-response.dto"]: await import("./user-management/dto/paginated-user-response.dto"),
        ["./user-management/dto/user-block-status.dto"]: await import("./user-management/dto/user-block-status.dto"),
        ["./transactions/dto/paginated-bank-to-bank-response.dto"]: await import("./transactions/dto/paginated-bank-to-bank-response.dto"),
        ["./transactions/dto/paginated-wallet-to-wallet-response.dto"]: await import("./transactions/dto/paginated-wallet-to-wallet-response.dto"),
        ["./transactions/dto/paginated-bank-to-wallet-response.dto"]: await import("./transactions/dto/paginated-bank-to-wallet-response.dto"),
        ["./transactions/dto/paginated-wallet-to-bank-response.dto"]: await import("./transactions/dto/paginated-wallet-to-bank-response.dto"),
        ["./transactions/dto/transaction-stats.dto"]: await import("./transactions/dto/transaction-stats.dto"),
        ["./admin-management/dto/settings.dto"]: await import("./admin-management/dto/settings.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./config/brics/dto/brics.dto"), { "BricsAccountDto": { AccountNo: { required: true, type: () => String }, Balance: { required: true, type: () => Number }, CurrencyID: { required: true, type: () => Number }, CustomerID: { required: true, type: () => Number } }, "BricsCustomerDto": { CustomerID: { required: true, type: () => Number }, EMail: { required: true, type: () => String }, ContactPhone1: { required: true, type: () => String }, CustomerName: { required: true, type: () => String }, Surname: { required: true, type: () => String }, Otchestvo: { required: true, type: () => String }, SurnameTranslit: { required: true, type: () => String }, CustomerNameTranslit: { required: true, type: () => String }, OtchestvoTranslit: { required: true, type: () => String } } }], [import("./users/dto/wallet.dto"), { "WalletDto": { currency: { required: true, enum: t["./users/enums/currency"].Currency }, address: { required: true, type: () => String }, balance: { required: true, type: () => Number }, buy_rate: { required: true, type: () => Number }, sell_rate: { required: true, type: () => Number } } }], [import("./users/dto/user-info.dto"), { "UserInfoDto": { customer_id: { required: true, type: () => Number }, first_name: { required: true, type: () => String }, middle_name: { required: true, type: () => String }, last_name: { required: true, type: () => String }, phone: { required: true, type: () => String }, email: { required: true, type: () => String }, private_key: { required: false, type: () => String } }, "UserDto": { wallets: { required: true, type: () => [t["./users/dto/wallet.dto"].WalletDto] }, platform_fee: { required: true, type: () => Number } } }], [import("./payments/dto/payment.dto"), { "PaymentDto": { amount: { required: true, type: () => Number } }, "TransferDto": { amount: { required: true, type: () => Number }, phone_number: { required: false, type: () => String }, address: { required: false, type: () => String }, currency: { required: true, enum: t["./users/enums/currency"].Currency } } }], [import("./common/dto/status.dto"), { "StatusOKDto": { status: { required: true, type: () => String, default: "OK" } } }], [import("./payments/dto/convert.dto"), { "ConvertDto": { asset_from: { required: true, enum: t["./users/enums/currency"].Currency }, asset_to: { required: true, enum: t["./users/enums/currency"].Currency }, amount_from: { required: true, type: () => Number } } }], [import("./payments/dto/get-transactions.dto"), { "GetTransactions": { currency: { required: false, enum: t["./users/enums/currency"].Currency, isArray: true }, from_time: { required: true, type: () => Number }, to_time: { required: true, type: () => Number }, take: { required: true, type: () => Number }, skip: { required: true, type: () => Number } } }], [import("./payments/dto/transaction.dto"), { "TransactionDto": { currency: { required: true, enum: t["./users/enums/currency"].Currency }, amount: { required: true, type: () => Number }, type: { required: true, enum: t["./payments/enums/transaction-type"].TransactionType }, successful: { required: true, type: () => Boolean }, created_at: { required: true, type: () => Number } } }], [import("./admin-management/dto/create-admin.dto"), { "CreateAdminDto": { email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, role: { required: true, type: () => String } } }], [import("./admin-management/dto/update-admin.dto"), { "UpdateAdminDto": { email: { required: false, type: () => String, format: "email" }, password: { required: false, type: () => String }, firstName: { required: false, type: () => String }, lastName: { required: false, type: () => String }, role: { required: false, type: () => String } } }], [import("./admin-management/dto/admin-response.dto"), { "AdminResponseDto": { id: { required: true, type: () => Number }, email: { required: true, type: () => String }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, role: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./admin-management/dto/paginated-admin-response.dto"), { "PaginatedAdminResponseDto": { items: { required: true, type: () => [t["./admin-management/dto/admin-response.dto"].AdminResponseDto] }, total: { required: true, type: () => Number }, offset: { required: true, type: () => Number }, limit: { required: true, type: () => Number } } }], [import("./admin-management/dto/admin-list-query.dto"), { "AdminListQueryDto": { offset: { required: false, type: () => Number, default: 0, minimum: 0 }, limit: { required: false, type: () => Number, default: 10, minimum: 1 }, firstNameQuery: { required: false, type: () => String }, lastNameQuery: { required: false, type: () => String }, emailQuery: { required: false, type: () => String }, roles: { required: false, type: () => [String] }, createdFrom: { required: false, type: () => String }, createdTo: { required: false, type: () => String }, sortFirstName: { required: false, type: () => Object }, sortLastName: { required: false, type: () => Object }, sortEmail: { required: false, type: () => Object }, sortCreatedAt: { required: false, type: () => Object } } }], [import("./admin-management/dto/admin-auth.dto"), { "AdminAuthDto": { email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String } }, "AdminRefreshDto": { refreshToken: { required: true, type: () => String } }, "AdminAuthResponseDto": { accessToken: { required: true, type: () => String }, refreshToken: { required: true, type: () => String } } }], [import("./user-management/dto/create-user.dto"), { "CreateUserDto": { first_name: { required: true, type: () => String }, middle_name: { required: true, type: () => String }, last_name: { required: true, type: () => String }, phone: { required: true, type: () => String }, email: { required: true, type: () => String, format: "email" }, address: { required: true, type: () => String }, private_key: { required: true, type: () => String } } }], [import("./user-management/dto/update-user.dto"), { "UpdateUserDto": { first_name: { required: false, type: () => String }, middle_name: { required: false, type: () => String }, last_name: { required: false, type: () => String }, phone: { required: false, type: () => String }, email: { required: false, type: () => String, format: "email" }, address: { required: false, type: () => String }, private_key: { required: false, type: () => String } } }], [import("./user-management/dto/paginated-user-response.dto"), { "PaginatedUserResponseDto": { items: { required: true, type: () => [t["./users/dto/user-info.dto"].UserInfoDto] }, total: { required: true, type: () => Number }, offset: { required: true, type: () => Number }, limit: { required: true, type: () => Number } } }], [import("./common/dto/pagination-query.dto"), { "PaginationQueryDto": { offset: { required: false, type: () => Number, default: 0, minimum: 0 }, limit: { required: false, type: () => Number, default: 10, minimum: 1 } } }], [import("./user-management/dto/user-block-status.dto"), { "UserBlockStatusDto": { user_id: { required: true, type: () => Number }, blocked: { required: true, type: () => Boolean } } }], [import("./transactions/dto/bank-to-bank-transaction.dto"), { "BankToBankTransactionDto": { id: { required: true, type: () => Number }, amount: { required: true, type: () => Number }, comment: { required: true, type: () => String }, date: { required: true, type: () => Date }, sender_account: { required: true, type: () => String }, receiver_account: { required: true, type: () => String }, status: { required: true, type: () => String } } }], [import("./transactions/dto/paginated-bank-to-bank-response.dto"), { "PaginatedBankToBankResponseDto": { items: { required: true, type: () => [t["./transactions/dto/bank-to-bank-transaction.dto"].BankToBankTransactionDto] }, total: { required: true, type: () => Number }, offset: { required: true, type: () => Number }, limit: { required: true, type: () => Number } } }], [import("./transactions/dto/wallet-to-wallet-transaction.dto"), { "WalletToWalletTransactionDto": { tx_hash: { required: true, type: () => String }, amount: { required: true, type: () => Number }, receiver_address: { required: true, type: () => String }, contract_address: { required: true, type: () => String }, date: { required: true, type: () => Date }, status: { required: true, type: () => String } } }], [import("./transactions/dto/paginated-wallet-to-wallet-response.dto"), { "PaginatedWalletToWalletResponseDto": { items: { required: true, type: () => [t["./transactions/dto/wallet-to-wallet-transaction.dto"].WalletToWalletTransactionDto] }, total: { required: true, type: () => Number }, offset: { required: true, type: () => Number }, limit: { required: true, type: () => Number } } }], [import("./transactions/dto/bank-to-wallet-transaction.dto"), { "BankToWalletTransactionDto": { bank_op_id: { required: true, type: () => Number }, tx_hash: { required: true, type: () => String }, amount: { required: true, type: () => Number }, comment: { required: true, type: () => String }, date: { required: true, type: () => Date }, sender_account: { required: true, type: () => String }, receiver_address: { required: true, type: () => String }, status: { required: true, type: () => String } } }], [import("./transactions/dto/paginated-bank-to-wallet-response.dto"), { "PaginatedBankToWalletResponseDto": { items: { required: true, type: () => [t["./transactions/dto/bank-to-wallet-transaction.dto"].BankToWalletTransactionDto] }, total: { required: true, type: () => Number }, offset: { required: true, type: () => Number }, limit: { required: true, type: () => Number } } }], [import("./transactions/dto/wallet-to-bank-transaction.dto"), { "WalletToBankTransactionDto": { bank_op_id: { required: true, type: () => Number }, tx_hash: { required: true, type: () => String }, amount: { required: true, type: () => Number }, comment: { required: true, type: () => String }, date: { required: true, type: () => Date }, receiver_account: { required: true, type: () => String }, sender_address: { required: true, type: () => String }, status: { required: true, type: () => String } } }], [import("./transactions/dto/paginated-wallet-to-bank-response.dto"), { "PaginatedWalletToBankResponseDto": { items: { required: true, type: () => [t["./transactions/dto/wallet-to-bank-transaction.dto"].WalletToBankTransactionDto] }, total: { required: true, type: () => Number }, offset: { required: true, type: () => Number }, limit: { required: true, type: () => Number } } }], [import("./transactions/dto/transaction-filter.dto"), { "TransactionFilterDto": { amount: { required: false, type: () => Number }, amount_min: { required: false, type: () => Number }, amount_max: { required: false, type: () => Number }, id: { required: false, type: () => Number }, comment: { required: false, type: () => String }, date: { required: false, type: () => String }, date_from: { required: false, type: () => String }, date_to: { required: false, type: () => String }, status: { required: false, type: () => String }, tx_hash: { required: false, type: () => String } } }], [import("./transactions/dto/transaction-stats-filter.dto"), { "TransactionStatsFilterDto": { type: { required: false, type: () => String }, amount: { required: false, type: () => Number }, amount_min: { required: false, type: () => Number }, amount_max: { required: false, type: () => Number }, status: { required: false, type: () => String }, comment: { required: false, type: () => String }, date_from: { required: false, type: () => String }, date_to: { required: false, type: () => String }, tx_hash: { required: false, type: () => String }, sender_account: { required: false, type: () => String }, receiver_account: { required: false, type: () => String }, sender_address: { required: false, type: () => String }, receiver_address: { required: false, type: () => String } } }], [import("./transactions/dto/transaction-stats.dto"), { "TransactionStatsDto": { total_count: { required: true, type: () => Number }, total_amount: { required: true, type: () => Number } } }], [import("./transactions/dto/reject-transaction.dto"), { "RejectTransactionDto": { id: { required: false, type: () => Number }, tx_hash: { required: false, type: () => String } } }], [import("./admin-management/dto/settings.dto"), { "SettingsDto": { esom_per_usd: { required: true, type: () => String }, esom_som_conversion_fee_pct: { required: true, type: () => String }, btc_trade_fee_pct: { required: true, type: () => String }, eth_trade_fee_pct: { required: true, type: () => String }, usdt_trade_fee_pct: { required: true, type: () => String }, btc_withdraw_fee_fixed: { required: true, type: () => String }, eth_withdraw_fee_fixed: { required: true, type: () => String }, usdt_withdraw_fee_fixed: { required: true, type: () => String }, min_withdraw_btc: { required: true, type: () => String }, min_withdraw_eth: { required: true, type: () => String }, min_withdraw_usdt_trc20: { required: true, type: () => String } } }], [import("./blockchain-config/dto/blockchain-config.dto"), { "BlockchainConfigDto": { commission_percent: { required: true, type: () => Number }, blockchain_status: { required: true, type: () => Object } } }], [import("./blockchain-config/dto/update-commission.dto"), { "UpdateCommissionDto": { commission_percent: { required: true, type: () => Number, minimum: 0, maximum: 100 } } }], [import("./blockchain-config/dto/update-blockchain-status.dto"), { "UpdateBlockchainStatusDto": { blockchain_status: { required: true, type: () => Object } } }], [import("./common/dto/create-common.dto"), { "CreateCommonDto": {} }], [import("./common/dto/update-common.dto"), { "UpdateCommonDto": {} }], [import("./common/entities/common.entity"), { "CommonEntity": { id: { required: true, type: () => Number } } }], [import("./transactions/dto/transactions-list.dto"), { "TransactionsListDto": { kind: { required: false, type: () => [String] }, status: { required: false, type: () => [String] }, asset: { required: false, type: () => [String] }, date_from: { required: false, type: () => String }, date_to: { required: false, type: () => String }, amount_min: { required: false, type: () => Number }, amount_max: { required: false, type: () => Number }, id: { required: false, type: () => Number }, tx_hash: { required: false, type: () => String }, sender: { required: false, type: () => String }, receiver: { required: false, type: () => String }, sort_by: { required: false, type: () => Object }, sort_dir: { required: false, type: () => Object }, offset: { required: false, type: () => Number, default: 0, minimum: 0 }, limit: { required: false, type: () => Number, default: 20, minimum: 1 } }, "TransactionItemDto": { id: { required: true, type: () => Number }, kind: { required: true, type: () => String }, status: { required: true, type: () => String }, som_amount: { required: true, type: () => Number }, asset: { required: false, type: () => String }, tx_hash: { required: false, type: () => String }, bank_op_id: { required: false, type: () => Number }, sender_customer_id: { required: false, type: () => Number }, receiver_customer_id: { required: false, type: () => Number }, sender_wallet_address: { required: false, type: () => String }, receiver_wallet_address: { required: false, type: () => String }, comment: { required: false, type: () => String }, createdAt: { required: true, type: () => Date } }, "TransactionsListResponseDto": { total: { required: true, type: () => Number }, offset: { required: true, type: () => Number }, limit: { required: true, type: () => Number }, items: { required: true, type: () => [t["./transactions/dto/transactions-list.dto"].TransactionItemDto] } } }]], "controllers": [[import("./app.controller"), { "AppController": { "getHello": { type: Number } } }], [import("./users/users.controller"), { "UsersController": { "info": { type: t["./users/dto/user-info.dto"].UserDto } } }], [import("./payments/payments.controller"), { "PaymentsController": { "fiatToCrypto": { type: t["./common/dto/status.dto"].StatusOKDto }, "cryptoToFiat": { type: t["./common/dto/status.dto"].StatusOKDto }, "transfer": { type: t["./common/dto/status.dto"].StatusOKDto }, "convert": { type: t["./common/dto/status.dto"].StatusOKDto }, "getHistory": { type: [t["./payments/dto/transaction.dto"].TransactionDto] } } }], [import("./admin-management/admin-management.controller"), { "AdminManagementController": { "login": { type: t["./admin-management/dto/admin-auth.dto"].AdminAuthResponseDto }, "refresh": { type: t["./admin-management/dto/admin-auth.dto"].AdminAuthResponseDto }, "create": { type: t["./admin-management/dto/admin-response.dto"].AdminResponseDto }, "findAll": { type: t["./admin-management/dto/paginated-admin-response.dto"].PaginatedAdminResponseDto }, "getMe": { type: t["./admin-management/dto/admin-response.dto"].AdminResponseDto }, "findOne": { type: t["./admin-management/dto/admin-response.dto"].AdminResponseDto }, "update": { type: t["./admin-management/dto/admin-response.dto"].AdminResponseDto }, "remove": {} } }], [import("./user-management/user-management.controller"), { "UserManagementController": { "create": { type: t["./users/dto/user-info.dto"].UserInfoDto }, "findAll": { type: t["./user-management/dto/paginated-user-response.dto"].PaginatedUserResponseDto }, "findOne": { type: t["./users/dto/user-info.dto"].UserInfoDto }, "update": { type: t["./users/dto/user-info.dto"].UserInfoDto }, "remove": {}, "block": { type: t["./user-management/dto/user-block-status.dto"].UserBlockStatusDto }, "unblock": { type: t["./user-management/dto/user-block-status.dto"].UserBlockStatusDto } } }], [import("./transactions/transactions.controller"), { "TransactionsController": { "list": {}, "statsToday": {}, "getBankTransactionById": { type: Object }, "getBlockchainTransactionByHash": { type: Object }, "getAllBankToBank": { type: t["./transactions/dto/paginated-bank-to-bank-response.dto"].PaginatedBankToBankResponseDto }, "getAllWalletToWallet": { type: t["./transactions/dto/paginated-wallet-to-wallet-response.dto"].PaginatedWalletToWalletResponseDto }, "getAllBankToWallet": { type: t["./transactions/dto/paginated-bank-to-wallet-response.dto"].PaginatedBankToWalletResponseDto }, "getAllWalletToBank": { type: t["./transactions/dto/paginated-wallet-to-bank-response.dto"].PaginatedWalletToBankResponseDto }, "getBankToBank": { type: t["./transactions/dto/paginated-bank-to-bank-response.dto"].PaginatedBankToBankResponseDto }, "getWalletToWallet": { type: t["./transactions/dto/paginated-wallet-to-wallet-response.dto"].PaginatedWalletToWalletResponseDto }, "getBankToWallet": { type: t["./transactions/dto/paginated-bank-to-wallet-response.dto"].PaginatedBankToWalletResponseDto }, "getWalletToBank": { type: t["./transactions/dto/paginated-wallet-to-bank-response.dto"].PaginatedWalletToBankResponseDto }, "rejectTransaction": {}, "getStats": { type: t["./transactions/dto/transaction-stats.dto"].TransactionStatsDto } } }], [import("./blockchain-config/blockchain-config.controller"), { "BlockchainConfigController": { "getSettings": { type: t["./admin-management/dto/settings.dto"].SettingsDto }, "updateSettings": { type: t["./admin-management/dto/settings.dto"].SettingsDto } } }]] } };
};